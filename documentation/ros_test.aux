\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Task 1 : Read and obey the README.md(Remove all errors from the package and atleast two launch files has to work)}{2}{section.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Error 1 : "Could not find package joy" produced by CMakeLists.txt file when compiling the package}{2}{subsection.1.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.1}Solution : }{2}{subsubsection.1.1.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.2}Approach :}{2}{subsubsection.1.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Error 2 : "Has no member named 'turn' in inf\_main.cpp" and "Has no member named 'forward' in inf\_main.cpp" produced when compiling the package}{2}{subsection.1.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.1}Solution : }{2}{subsubsection.1.2.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.2}Approach :}{2}{subsubsection.1.2.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}Error 3 : "Requires the 'velocities' arg to be set" produced when trying to launch inf.launch file}{3}{subsection.1.3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.1}Solution : }{3}{subsubsection.1.3.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.2}Approach :}{3}{subsubsection.1.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4}Error 4 : Turtle doesn't go in square as code written in main.cpp when ros\_test.launch file is launched}{3}{subsection.1.4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.1}Solution : }{3}{subsubsection.1.4.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.2}Approach :}{3}{subsubsection.1.4.2}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Task 2 : Create a node which draws the/an infinity sign using the "arc"-function\FN@sf@gobble@opt  {Please note that after looking at the code inside inf\_main.cpp file we thought that solving this task is just about making this code work properly(print infinity sign when inf.launch file is launched). The explanation here shows how we did it. If your intention was to make us create a new node from scratch and make it print infinity sign, we did this as well you need to checkout \textit  {arc-function-node} branch and launch \textbf  {inf\_arc.launch}. Description of this task has made us confuse.}}{4}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Solution :}{4}{subsection.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Approach :}{4}{subsection.2.2}}
